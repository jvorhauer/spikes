akka {
  extensions = [akka.persistence.Persistence]

  log-dead-letters = 10
  log-dead-letters-during-shutdown = on
  log-config-on-start = off
  loggers = ["akka.event.Logging$DefaultLogger"]
  loglevel = INFO
  stdout-loglevel = INFO

  actor {
    serializers {
      kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
    }
    serialization-bindings {
      "spikes.model.package$SpikeSerializable" = kryo
    }
  }

  persistence {
    journal {
      plugin = "akka.persistence.cassandra.journal"
      auto-start-journals = ["akka.persistence.cassandra.journal"]
    }
    cassandra {
      session-provider = "akka.stream.alpakka.cassandra.DefaultSessionProvider"
      session-dispatcher = "akka.persistence.cassandra.default-dispatcher"
      datastax-java-driver-config = "datastax-java-driver"

      journal {
        keyspace-autocreate = true
        tables-autocreate = true

        events-by-tag {
          eventual-consistency-delay = 25ms
          flush-interval = 25ms
          pubsub-notification = on
        }
      }

      query {
        refresh-interval = 2s
      }

      snapshot {
        keyspace-autocreate = true
        tables-autocreate = true
      }
    }
  }
}

datastax-java-driver {
  basic {
    session-keyspace = "akka"
    cloud {
      secure-connect-bundle = ${ASTRA_SCB}
    }
  }
  advanced {
    auth-provider {
      class = PlainTextAuthProvider
      username = ${ASTRA_USERNAME}
      password = ${ASTRA_PASSWORD}
    }
    reconnect-on-init = true
  }
}

kamon {
  environment.service = "Spikes"
  apm.api-key = ${KAMON_TOKEN}
}
